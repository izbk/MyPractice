首先对订购流程图进行分析，先看
步骤1，构造订购请求消息并将其编码为HTTP+XML形式。Netty的HTTP协议栈提供了构造HTTP请求消息的相关接口，但是无法将普通的POJO对象转换为
HTTP+XML的HTTP请求消息，需要自定义HTTP+XML格式的请求消息编码器。
步骤2，利用Netty的HTTP协议栈，可以支持HTTP链路的建立和请求消息的发送，所以不需要额外开发，直接重用Netty的能力即可。
步骤3，HTTP服务端需要将HTTP+XML格式的订购请求消息解码为订购请求POJO对象，同时获取HTTP请求消息头信息。利用Netty的HTTP协议栈服务端，
可以完成HTTP请求消息的解码，但是，如果消息体为XML格式，Netty无法支持将其解码为POJO对象，需要在Netty协议栈的基础上扩展实现。
步骤4，服务端对订购请求消息处理完成后，重新将其封装成XML，通过HTTP应答消息体携带给客户端，Netty的HTTP协议栈不支持直接将POJO对象的应答
消息以XML方式发送，需要定制。
步骤5，HTTP客户端需要将HTTP+XML格式的应答消息解码为订购POJO对象，同时能够获取应答消息的HTTP头信息，Netty的协议栈不支持自动的消息解码。

通过分析，我们可以了解到哪些能力是Netty支持的，哪些需要扩展开发实现。下面给出设计思路。
（1）需要一套通用、高性能的XML序列化框架，它能够灵活地实现POJO-XML的互相转换，最好能够通过工具自动生成绑定关系，或者通过XML的方式配置双方的映射关系；

（2）作为通用的HTTP+XML协议栈，XML-POJO对象的映射关系应该非常灵活，支持命名空间和自定义标签；

（3）提供HTTP+XML请求消息编码器，供HTTP客户端发送请求消息自动编码使用；

（4）提供HTTP+XML请求消息解码器，供HTTP服务端对请求消息自动解码使用；

（5）提供HTTP+XML响应消息编码器，供HTTP服务端发送响应消息自动编码使用；

（6）提供HTTP+XML响应消息编码器，供HTTP客户端对应答消息进行自动解码使用；

（7）协议栈使用者不需要关心HTTP+XML的编解码，对上层业务零侵入，业务只需要对上层的业务POJO对象进行编排。